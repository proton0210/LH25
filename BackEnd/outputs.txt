# AWS CDK Backend Outputs and Configuration

## Deployment Command
```bash
npx cdk deploy --context resendApiKey=YOUR_RESEND_API_KEY --context fromEmail=noreply@yourdomain.com --context replyToEmail=support@yourdomain.com
```

## Actual Deployed Stack Outputs (ap-south-1)

### Cognito User Pool
- **UserPoolId**: ap-south-1_r9FcRxAsd
- **UserPoolClientId**: 4j3msfhhurtikrhg179l2u55sr
- **UserPoolName**: lh-user-pool
- **SignIn**: Email and Password
- **Custom Attributes**: firstName, lastName

### Cognito Groups
- **UserGroupName**: user (precedence: 3)
- **PaidGroupName**: paid (precedence: 2) 
- **AdminGroupName**: admin (precedence: 1)

### DynamoDB Tables
- **UserTableName**: lh-users
  - Partition Key: userId (String)
  - Billing: PAY_PER_REQUEST
  - Point-in-time Recovery: Enabled

### S3 Bucket
- **UserFilesBucketName**: lh-user-files-{account}-{region}
  - Versioning: Enabled
  - Encryption: S3_MANAGED
  - Public Access: Blocked
  - CORS: Configured for web access

### Lambda Functions
- **PostConfirmationLambdaArn**: arn:aws:lambda:ap-south-1:585768150182:function:BackEndStack-PostConfirmationLambdaC4F60401-hiTR9uqQpMcV
- **GenerateUserIdLambda**: Generates ULID for new users
- **CreateDynamoDBUserLambda**: Creates user record in DynamoDB
- **CreateS3FolderLambda**: Creates user folder in S3
- **SendWelcomeEmailLambda**: Sends welcome email via Resend

### Step Functions
- **UserCreationStateMachineArn**: arn:aws:states:ap-south-1:585768150182:stateMachine:user-creation-workflow
- **Workflow**:
  1. Generate User ID (ULID)
  2. In Parallel:
     - Create user in DynamoDB
     - Create user folder in S3
  3. Send welcome email

## User Creation Process

1. User signs up with email, password, firstName, lastName
2. User receives verification email from Cognito
3. User confirms email
4. PostConfirmation Lambda triggers Step Functions
5. Step Functions workflow:
   - Generates unique userId (ULID)
   - Creates user record in DynamoDB with:
     - userId (ULID)
     - cognitoUserId (Cognito sub)
     - email
     - firstName
     - lastName
     - createdAt
     - tier: "user" (default)
   - Creates S3 folder: {userId}/
   - Sends welcome email via Resend

## Configuration Notes

### Resend Email Service
- **API Key**: Deploy with --context resendApiKey=YOUR_API_KEY
- **From Email**: Configured in handler as "Vidit <vidit@servelesscreed.com>"
- **Domain Verification**: Add your domain to Resend dashboard
- **Email Templates**: HTML and plain text versions included

### Environment Variables
- USER_TABLE_NAME: DynamoDB table for users
- USER_FILES_BUCKET_NAME: S3 bucket for user files
- USER_CREATION_STATE_MACHINE_ARN: Step Functions state machine
- RESEND_API_KEY: API key for Resend email service
- FROM_EMAIL_ADDRESS: Sender email address
- REPLY_TO_EMAIL_ADDRESS: Reply-to email address

### Security Considerations
- Cognito password policy enforced (min 8 chars, upper, lower, digit, symbol)
- S3 bucket has versioning and encryption enabled
- DynamoDB tables have point-in-time recovery
- All resources set to DESTROY on stack deletion (for development)

## Post-Deployment Steps

1. Verify your domain in Resend dashboard
2. Update the FROM_EMAIL in send-welcome-email/handler.ts
3. Configure production removal policies before going live
4. Set up CloudWatch alarms for Lambda errors
5. Configure DynamoDB backups for production
6. Review and tighten IAM permissions
7. Set up custom domain for Cognito (optional)
8. Configure SES for Cognito emails (optional)

## Testing

1. Create a test user via Cognito console or API
2. Verify the email
3. Check DynamoDB for user record
4. Check S3 for user folder
5. Verify welcome email received
6. Monitor Step Functions execution in AWS console